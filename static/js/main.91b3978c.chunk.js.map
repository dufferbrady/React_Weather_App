{"version":3,"sources":["containers/Weather/Weather.css","components/ErrorHandling/ErrorHandling.css","components/WeatherTile/WeatherTile.css","components/Navigation/SideDrawer/SideDrawer.css","components/UI/TempToggler/TempToggler.css","components/Navigation/NavigationItems/NavigationSearchItems/NavigationSearchItems.css","components/UI/Button/Button.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/Toolbar/Toolbar.css","components/WeatherForm/WeatherForm.css","components/UI/DrawerToggle/DrawerToggle.css","components/UI/BackDrop/BackDrop.css","components/UI/Spinner/Spinner.css","containers/WeatherForecast/WeatherForecast.css","App.css","hoc/Auxillary/Auxillary.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationSearchItems/NavigationSearchItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/UI/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/BackDrop/BackDrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/WeatherForm/WeatherForm.js","components/UI/Spinner/Spinner.js","containers/SearchWeather/SearchWeather.js","components/WeatherTile/WeatherTile.js","containers/WeatherForecast/WeatherForecast.js","components/UI/Button/Button.js","components/UI/TempToggler/TempToggler.js","components/ErrorHandling/ErrorHandling.js","containers/Weather/Weather.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Weather","WeatherContainer","HeaderContainer","spanItem","HeaderCity","WeatherInfo","WeatherIcon","WeatherTempContainer","WeatherTemp","WeatherTempToggle","WeatherStats","WeatherTile","Closed","Error","Message","ErrorIcon","Details","Summary","Button","Tile","TileHeader","TileTemp","MaxTemp","MinTemp","SideDrawer","Open","Logo","Icon","Active","InActive","NavigationSearchItem","NavigationSearchForm","Onclic","rotating","NavigationItem","NavigationItems","Toolbar","DesktopOnly","Container","Search","Drawer","BackDrop","Loader","WeatherForecast","App","App-logo","App-logo-spin","App-header","App-link","Aux","props","children","react_default","a","createElement","className","classes","NavLink","onClick","closed","to","link","href","active","NavSearchItem","state","newCity","inputCityHandler","event","_this","setState","target","value","submitHandler","_callee","city","queryParams","regenerator_default","wrap","_context","prev","next","preventDefault","elements","encodeURIComponent","history","push","pathname","search","concat","stop","this","onSubmit","autoComplete","name","type","placeholder","onChange","Component","withRouter","navigationItems","removeDisplay","remove","NavigationItems_NavigationItem_NavigationItem","DrawerToggle","open","toolbar","UI_DrawerToggle_DrawerToggle","showSideDrawer","NavigationItems_NavigationItems","show","clicked","sideDrawer","attachedClasses","Auxillary","UI_BackDrop_BackDrop","join","Layout","closeSideDrawerHandler","toggleSideDrawerHandler","prevState","Toolbar_Toolbar","SideDrawer_SideDrawer","weatherForm","load","required","spinner","searchWeather","loading","getCity","e","console","log","weather","Spinner_Spinner","WeatherForm_WeatherForm","day","src","icon","alt","temp_max","temp_min","DATES","weatherForecast","forecast","dd","Date","getDay","weatherTiles","map","index","date","celsiusActive","main","toFixed","farenheitActive","imageURL","components_WeatherTile_WeatherTile","key","conditions","description","loadingClass","forecastLoading","tempToggler","activeClasses","click","disabled","errorHandler","index_es","message","error","toString","Link","0","1","2","3","4","5","6","showForecast","country","temperature","undefined","humidity","wind","cloudiness","componentDidUpdate","prevProps","location","substr","getWeatherHandler","updatedCity","charAt","toUpperCase","slice","fetch","then","res","json","data","temp","today","getDateHandler","windSpeed","speed","sys","clouds","all","catch","hh","getHours","mm","getMinutes","setCelsiusHandler","farenheit","Celcius","setFarenheitHandler","celsius","Farenheit","getForecast","forecastDays","list","_this2","WeatherForecast_WeatherForecast","TempToggler_TempToggler","UI_Button_Button","ErrorHandling_ErrorHandling","library","add","faFrown","components_Layout_Layout","Switch","Route","path","component","exact","SearchWeather","Boolean","window","hostname","match","app","BrowserRouter","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8EACAA,EAAAC,QAAA,CAAkBC,QAAA,0BAAAC,iBAAA,mCAAAC,gBAAA,kCAAAC,SAAA,2BAAAC,WAAA,6BAAAC,YAAA,8BAAAC,YAAA,8BAAAC,qBAAA,uCAAAC,YAAA,8BAAAC,kBAAA,oCAAAC,aAAA,+BAAAC,YAAA,8BAAAC,OAAA,gDCAlBd,EAAAC,QAAA,CAAkBc,MAAA,8BAAAC,QAAA,gCAAAC,UAAA,kCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,OAAA,kDCAlBpB,EAAAC,QAAA,CAAkBoB,KAAA,2BAAAC,WAAA,iCAAAC,SAAA,+BAAAC,QAAA,8BAAAC,QAAA,8BAAAX,OAAA,iDCAlBd,EAAAC,QAAA,CAAkByB,WAAA,gCAAAC,KAAA,0BAAAb,OAAA,4BAAAc,KAAA,4CCAlB5B,EAAAC,QAAA,CAAkB4B,KAAA,2BAAAC,OAAA,6BAAAC,SAAA,sDCAlB/B,EAAAC,QAAA,CAAkB+B,qBAAA,qDAAAC,qBAAA,uECAlBjC,EAAAC,QAAA,CAAkBmB,OAAA,wBAAAc,OAAA,wBAAAC,SAAA,0BAAArB,OAAA,0CCAlBd,EAAAC,QAAA,CAAkBmC,eAAA,0DCAlBpC,EAAAC,QAAA,CAAkBoC,gBAAA,0CAAAvB,OAAA,mDCAlBd,EAAAC,QAAA,CAAkBqC,QAAA,0BAAAV,KAAA,uBAAAW,YAAA,kDCAlBvC,EAAAC,QAAA,CAAkBuC,UAAA,gCAAAC,OAAA,kDCAlBzC,EAAAC,QAAA,CAAkByC,OAAA,gDCAlB1C,EAAAC,QAAA,CAAkB0C,SAAA,8CCAlB3C,EAAAC,QAAA,CAAkB2C,OAAA,yBAAAT,SAAA,6CCAlBnC,EAAAC,QAAA,CAAkB4C,gBAAA,6DCAlB7C,EAAAC,QAAA,CAAkB6C,IAAA,kBAAAC,WAAA,uBAAAC,gBAAA,4BAAAC,aAAA,yBAAAC,WAAA,wPCCHC,EAFH,SAAAC,GAAK,OAAIA,EAAMC,mCCeZjB,EAVQ,SAAAgB,GAAK,OACxBE,EAAAC,EAAAC,cAAA,MAAIC,UAAYC,IAAQtB,gBACpBkB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACAC,QAAUR,EAAMS,OAChBC,GAAKV,EAAMW,KACXC,KAAOZ,EAAMW,KACbN,UAAYL,EAAMa,OAASP,IAAQO,OAAS,MAASb,EAAMC,8DCN7Da,6MACFC,MAAQ,CACJC,QAAS,MAGbC,iBAAmB,SAAAC,GACfC,EAAKC,SAAS,CAACJ,QAASE,EAAMG,OAAOC,WAGzCC,oDAAgB,SAAAC,EAAMN,GAAN,IAAAO,EAAAC,EAAA,OAAAC,EAAAxB,EAAAyB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZb,EAAMc,iBACAP,EAAOP,EAAMG,OAAOY,SAASR,KAAKH,MAClCI,EAAcQ,mBAAmBT,GACvCN,EAAKnB,MAAMmC,QAAQC,KAAK,CACpBC,SAAU,YACVC,OAAM,SAAAC,OAAWb,KAErBP,EAAKC,SAAS,CAACJ,QAAS,KAExBG,EAAKnB,MAAMS,SAVC,wBAAAoB,EAAAW,SAAAhB,EAAAiB,uIAcZ,OACIvC,EAAAC,EAAAC,cAAA,MAAIC,UAAYC,IAAQ1B,sBACpBsB,EAAAC,EAAAC,cAAA,QAAMC,UAAYC,IAAQzB,qBAAuB6D,SAAWD,KAAKlB,eAC7DrB,EAAAC,EAAAC,cAAA,SACAuC,aAAa,MACbC,KAAK,OACLvC,UAAYoC,KAAKzC,MAAMa,OAASP,IAAQO,OAAS,KACjDgC,KAAK,OACLvB,MAAQmB,KAAK1B,MAAMC,QACnB8B,YAAY,kBACZC,SAAWN,KAAKxB,4BAjCR+B,aAwCbC,cAAWnC,oBCtBXoC,EAjBS,SAAAlD,GACpB,IAAImD,EAAgB,KAIpB,OAHGnD,EAAMoD,SACLD,EAAgB7C,IAAQ5C,QAGxBwC,EAAAC,EAAAC,cAAA,MAAIC,UAAYC,IAAQrB,iBACpBiB,EAAAC,EAAAC,cAACiD,EAAD,CACA1C,KAAK,IACLF,OAAST,EAAMS,QAFf,QAGAP,EAAAC,EAAAC,cAACxB,EAAD,CACAyB,UAAY8C,EACZ1C,OAAST,EAAMS,6CCNZ6C,EARM,SAAAtD,GAAK,OACtBE,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQhB,OAASkB,QAAUR,EAAMuD,MAC9CrD,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,cCOOoD,EATC,SAAAxD,GAAK,OACjBE,EAAAC,EAAAC,cAAA,UAAQC,UAAYC,IAAQpB,SACxBgB,EAAAC,EAAAC,cAACqD,EAAD,CAAcF,KAAOvD,EAAM0D,iBAC3BxD,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQnB,aACrBe,EAAAC,EAAAC,cAACuD,EAAD,2CCFGpE,EAJE,SAAAS,GAAK,OAClBA,EAAM4D,KAAO1D,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQf,SAAWiB,QAAUR,EAAM6D,UAAmB,MCuBzEC,EArBI,SAAA9D,GACf,IAAI+D,EAAkB,CAACzD,IAAQhC,WAAYgC,IAAQ5C,QAInD,OAHGsC,EAAMuD,OACLQ,EAAkB,CAACzD,IAAQhC,WAAYgC,IAAQ/B,OAG/C2B,EAAAC,EAAAC,cAAC4D,EAAD,KACI9D,EAAAC,EAAAC,cAAC6D,EAAD,CACAL,KAAO5D,EAAMuD,KACbM,QAAU7D,EAAMS,SAChBP,EAAAC,EAAAC,cAAA,OAAKC,UAAY0D,EAAgBG,KAAK,MAClChE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuD,EAAD,CACAlD,OAAST,EAAMS,OACf2C,OAASpD,EAAMoD,aCcpBe,6MA5BXpD,MAAQ,CACJ2C,gBAAgB,KAGpBU,uBAAyB,WACrBjD,EAAKC,SAAS,CAACsC,gBAAgB,OAGnCW,wBAA0B,WACtBlD,EAAKC,SAAS,SAAAkD,GACV,MAAO,CAACZ,gBAAiBY,EAAUZ,2FAKvC,OACIxD,EAAAC,EAAAC,cAAC4D,EAAD,KACI9D,EAAAC,EAAAC,cAACmE,EAAD,CAASb,eAAiBjB,KAAK4B,0BAC/BnE,EAAAC,EAAAC,cAACoE,EAAD,CACAjB,KAAOd,KAAK1B,MAAM2C,eAClBjD,OAASgC,KAAK2B,uBACdhB,OAASX,KAAK4B,0BACdnE,EAAAC,EAAAC,cAAA,eAAQqC,KAAKzC,MAAMC,SAAnB,aAvBK+C,8BCMNyB,EARK,SAAAzE,GAAK,OACrBE,EAAAC,EAAAC,cAAA,QAAMsC,SAAW1C,EAAM0E,KAAOrE,UAAYC,IAAQlB,WAC9Cc,EAAAC,EAAAC,cAAA,SAAOuC,aAAa,MAAME,KAAK,OAAOD,KAAK,OAAOE,YAAY,OAAO6B,UAAQ,IAC7EzE,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQjB,4BCClBuF,EAJC,kBACZ1E,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQd,QAAxB,eCqCWqF,6MApCX9D,MAAQ,CACJ+D,SAAS,KAGbC,8CAAU,SAAAvD,EAAMwD,GAAN,IAAAvD,EAAAC,EAAA,OAAAC,EAAAxB,EAAAyB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACNiD,EAAEhD,iBACFb,EAAKC,SAAS,CAAE0D,SAAS,IACnBrD,EAAOuD,EAAE3D,OAAOY,SAASR,KAAKH,MACpCH,EAAKC,SAAS,CACV0D,SAAS,IAEPpD,EAAcQ,mBAAmBT,GACvCN,EAAKnB,MAAMmC,QAAQC,KAAK,CACpBC,SAAU,YACVC,OAAM,SAAAC,OAAWb,KAVf,wBAAAG,EAAAW,SAAAhB,EAAAiB,uIAeNwC,QAAQC,IAAI,0BAA2BzC,KAAKzC,OAC5C,IAAImF,EAAU,KAMd,OAJG1C,KAAK1B,MAAM+D,UACVK,EAAUjF,EAAAC,EAAAC,cAACgF,EAAD,OAIVlF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiF,EAAD,CACAX,KAAOjC,KAAKsC,UACVI,UA/BUnC,+CCcbvF,GAfK,SAAAuC,GAChB,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,KAAQrC,MACrBiC,EAAAC,EAAAC,cAAA,QAAMC,UAAYC,KAAQpC,YAAe8B,EAAMsF,KAC/CpF,EAAAC,EAAAC,cAAA,OAAKmF,IAAMvF,EAAMwF,KAAOC,IAAI,4BAC5BvF,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,KAAQnC,UACrB+B,EAAAC,EAAAC,cAAA,QAAMC,UAAYC,KAAQlC,SAAY4B,EAAM0F,SAA5C,QACAxF,EAAAC,EAAAC,cAAA,QAAMC,UAAYC,KAAQjC,SAAY2B,EAAM2F,SAA5C,+BCNVC,GAAQ,CACV,MACA,MACA,MACA,MACA,OACA,MACA,OAoCWC,GAjCS,SAAA7F,GACpBiF,QAAQC,IAAI,oBAAqBlF,EAAM8F,UACvC,IAAIC,GAAK,IAAIC,MAAOC,SAChBC,EAAelG,EAAM8F,SAASK,IAAI,SAACb,EAAKc,GAExC,IACIV,EAAUC,EADVU,EAAOT,GADXQ,GAASL,EAAKK,GAAS,GAGpBpG,EAAMsG,gBACLZ,GAAYJ,EAAIiB,KAAKb,SAAW,QAAQc,QAAQ,GAChDb,GAAYL,EAAIiB,KAAKZ,SAAW,QAAQa,QAAQ,IAEjDxG,EAAMyG,kBACLf,GAAY,KAACJ,EAAIiB,KAAKb,SAAW,QAAoB,IAAIc,QAAQ,GACjEb,GAAY,KAACL,EAAIiB,KAAKZ,SAAW,QAAoB,IAAIa,QAAQ,IAErE,IAAIE,EAAQ,mCAAAnE,OAAsC+C,EAAIH,QAAQ,GAAGK,KAArD,QACZ,OACItF,EAAAC,EAAAC,cAACuG,GAAD,CACArB,IAAMe,EACNO,IAAMR,EACNV,SAAWA,EACXC,SAAWA,EACXH,KAAOkB,EACPG,WAAavB,EAAIH,QAAQ,GAAG2B,gBAGpC,OACI5G,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,KAAQb,iBACnByG,wBCxBClI,GAfA,SAAAgC,GACX,IAAI+G,EAAezG,KAAQtC,OAO3B,OANGgC,EAAMgH,kBACLD,EAAezG,KAAQxB,QAExBkB,EAAM8F,WACLiB,EAAezG,KAAQ5C,QAGvBwC,EAAAC,EAAAC,cAAA,UACAC,UAAY0G,EACZvG,QAAUR,EAAM0E,MAAS1E,EAAMC,+BCCxBgH,GAZK,SAAAjH,GAChB,IAAIkH,EAAgB,CAAC5G,KAAQ7B,KAAM6B,KAAQ3B,UAI3C,OAHIqB,EAAMa,SACNqG,EAAgB,CAAC5G,KAAQ7B,KAAM6B,KAAQ5B,SAGvCwB,EAAAC,EAAAC,cAAA,UAAQI,QAAUR,EAAMmH,MAAQC,SAAWpH,EAAMa,OAASR,UAAY6G,EAAchD,KAAK,MACnFlE,EAAMC,iDCcLoH,GAnBM,SAAArH,GAAK,OACtBE,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,KAAQ3C,OACrBuC,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,KAAQ1C,SACrBsC,EAAAC,EAAAC,cAACkH,GAAA,EAAD,CAAiBjH,UAAWC,KAAQzC,UAAW2H,KAAK,UACpDtF,EAAAC,EAAAC,cAAA,UAAKJ,EAAMuH,UAEfrH,EAAAC,EAAAC,cAAA,WAASC,UAAYC,KAAQxC,SACzBoC,EAAAC,EAAAC,cAAA,WAASC,UAAYC,KAAQvC,SAA7B,WAGCiC,EAAMwH,OAASxH,EAAMwH,MAAMC,WAC9BvH,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAACsH,GAAA,EAAD,CAAMhH,GAAG,KACLR,EAAAC,EAAAC,cAAA,UAAQC,UAAYC,KAAQtC,QAA5B,YCXN4H,GAAQ,CACV+B,EAAG,SACHC,EAAG,SACHC,EAAG,UACHC,EAAG,YACHC,EAAG,WACHC,EAAG,SACHC,EAAG,YA8LQ9C,8MA1LXpE,MAAQ,CACJU,KAAM,KACNqD,SAAS,EACTgB,SAAU,KACVoC,cAAc,EACdlB,iBAAiB,EACjBmB,QAAS,KACTC,YAAa,KACb5C,KAAM,KACNsB,YAAa,KACbT,UAAMgC,EACNC,cAAUD,EACVE,UAAMF,EACNG,gBAAYH,EACZ/B,eAAe,EACfG,iBAAiB,EACjBe,OAAO,EACPD,QAAS,MASbkB,mBAAqB,SAAAC,GACjB,GAAGvH,EAAKnB,MAAM2I,SAASrG,SAAWoG,EAAUC,SAASrG,OAAQ,CACzDnB,EAAKC,SAAS,CAAC0D,SAAS,IACxB,IAAMrD,EAAON,EAAKnB,MAAM2I,SAASrG,OAAOsG,OAAO,GAC/CzH,EAAK0H,kBAAkBpH,OAI/BoH,kBAAoB,SAAApH,GAChB,IACMqH,EAAcrH,EAAKsH,OAAO,GAAGC,cAAgBvH,EAAKwH,MAAM,GAC9D9H,EAAKC,SAAS,CAACK,KAAMqH,IACrBI,MAAK,oDAAA3G,OAAqDuG,EAArD,WAAAvG,OAHW,qCAIX4G,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACF,IAAMC,GAAQD,EAAK/C,KAAKgD,KAAO,QAAQ/C,QAAQ,GACzChB,EAAI,mCAAAjD,OAAsC+G,EAAKnE,QAAQ,GAAGK,KAAtD,QACJa,EAAO,IAAIL,KACXwD,EAAQrI,EAAKsI,eAAepD,GAC5BqD,GAA+B,IAAlBJ,EAAKf,KAAKoB,MAAc,KAAMnD,QAAQ,GACzDrF,EAAKC,SAAS,CACV+G,QAASmB,EAAKM,IAAIzB,QAClBC,YAAamB,EACb/D,KAAMA,EACNsB,YAAawC,EAAKnE,QAAQ,GAAG2B,YAC7BhC,SAAS,EACTuB,KAAMmD,EACNlB,SAAUgB,EAAK/C,KAAK+B,SACpBC,KAAMmB,EACNlB,WAAYc,EAAKO,OAAOC,IACxBxD,eAAe,MAGtByD,MAAM,SAAAvC,GACHrG,EAAKC,SAAS,CACV0D,SAAS,EACTyC,QAAO,8CAAAhF,OAAgDuG,EAAhD,MACPtB,MAAOA,SAKvBiC,eAAiB,SAAApD,GACb,IAAMN,EAAKH,GAAMS,EAAKJ,UAClB+D,EAAK3D,EAAK4D,WACVC,EAAK7D,EAAK8D,aAOd,OANGH,EAAK,KACJA,EAAE,IAAAzH,OAAOyH,IAEVE,EAAK,KACJA,EAAE,IAAA3H,OAAO2H,IAEb,GAAA3H,OAAUwD,EAAV,MAAAxD,OAAiByH,EAAjB,KAAAzH,OAAuB2H,MAG3BE,kBAAoB,SAAAC,GAChB,IAAMC,GAA+B,EAAI,GAAvBD,EAAY,KAAe7D,QAAQ,GACrDrF,EAAKC,SAAS,CACVgH,YAAakC,EACbhE,eAAe,EACfG,iBAAiB,OAIzB8D,oBAAsB,SAAAC,GAClB,IAAMC,GAAqB,IAAPD,EAAqB,IAAIhE,QAAQ,GACrDrF,EAAKC,SAAS,CACVgH,YAAaqC,EACbnE,eAAe,EACfG,iBAAiB,OAIzBiE,YAAc,WACVvJ,EAAKC,SAAS,CAAC4F,iBAAiB,IAChC,IAAMvF,EAAON,EAAKJ,MAAMU,KAExByH,MAAK,qDAAA3G,OAAsDd,EAAtD,WAAAc,OADW,qCAEf4G,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACFrE,QAAQC,IAAIoE,GACZ,IAAMqB,EAAerB,EAAKsB,KAAK3B,MAAM,EAAG,GACxC9H,EAAKC,SAAS,CACV8G,cAAc,EACdpC,SAAU6E,MAGjBZ,MAAM,SAAAvC,GAAK,OACRrG,EAAKC,SAAS,CACV0D,SAAS,EACTyC,QAAS,0CACTC,MAAOA,0FAhGf/E,KAAKrB,SAAS,CAAC0D,SAAS,IACxB,IAAMrD,EAAOgB,KAAKzC,MAAM2I,SAASrG,OAAOsG,OAAO,GAC/CnG,KAAKoG,kBAAkBpH,oCAkGlB,IAAAoJ,EAAApI,KACDoD,EAAkB,KAEnBpD,KAAK1B,MAAMmH,eACVrC,EACI3F,EAAAC,EAAAC,cAAC0K,GAAD,CACAhF,SAAWrD,KAAK1B,MAAM+E,SACtBQ,cAAgB7D,KAAK1B,MAAMuF,cAC3BG,gBAAkBhE,KAAK1B,MAAM0F,mBAIrC,IAAItB,EACAjF,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQxD,SACrBoD,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQtD,iBACrBkD,EAAAC,EAAAC,cAAA,QAAMC,UAAYC,IAAQpD,YAAeuF,KAAK1B,MAAMU,KAApD,KAA8DgB,KAAK1B,MAAMoH,SACzEjI,EAAAC,EAAAC,cAAA,QAAMC,UAAYC,IAAQrD,UAAawF,KAAK1B,MAAMsF,MAClDnG,EAAAC,EAAAC,cAAA,QAAMC,UAAYC,IAAQrD,UAAawF,KAAK1B,MAAM+F,cAEtD5G,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQvD,kBACrBmD,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQnD,aACrB+C,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQlD,YAAcmI,IAAM9C,KAAK1B,MAAMyE,KAAOC,IAAI,wBACnEvF,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQjD,sBACrB6C,EAAAC,EAAAC,cAAA,QAAMC,UAAYC,IAAQhD,aAAgBmF,KAAK1B,MAAMqH,aACrDlI,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQ/C,mBACrB2C,EAAAC,EAAAC,cAAC2K,GAAD,CAAalK,OAAS4B,KAAK1B,MAAMuF,cAAgBa,MAAQ,kBAAM0D,EAAKT,kBAAkBS,EAAK9J,MAAMqH,eAAjG,UAGAlI,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC2K,GAAD,CAAalK,OAAS4B,KAAK1B,MAAM0F,gBAAkBU,MAAQ,kBAAM0D,EAAKN,oBAAoBM,EAAK9J,MAAMqH,eAArG,aAMZlI,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,IAAQ9C,cACrB0C,EAAAC,EAAAC,cAAA,wBAAiBqC,KAAK1B,MAAMuH,SAA5B,KACApI,EAAAC,EAAAC,cAAA,0BAAmBqC,KAAK1B,MAAMyH,WAA9B,KACAtI,EAAAC,EAAAC,cAAA,oBAAaqC,KAAK1B,MAAMwH,KAAxB,WAGRrI,EAAAC,EAAAC,cAAC4K,GAAD,CACAtG,KAAOjC,KAAKiI,YACZ1D,gBAAkBvE,KAAK1B,MAAMiG,gBAC7BlB,SAAWrD,KAAK1B,MAAM+E,UAHtB,iBAMED,GASV,OANGpD,KAAK1B,MAAM+D,UACVK,EAAUjF,EAAAC,EAAAC,cAACgF,EAAD,OAEX3C,KAAK1B,MAAMyG,QACVrC,EAAUjF,EAAAC,EAAAC,cAAC6K,GAAD,CAAezD,MAAO/E,KAAK1B,MAAMyG,MAAOD,QAAS9E,KAAK1B,MAAMwG,WAGtErH,EAAAC,EAAAC,cAAA,WACM+E,UApLInC,mDCTtBkI,KAAQC,IAAIC,UAiBG1L,oLAbX,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAYC,KAAQZ,KACvBQ,EAAAC,EAAAC,cAACiL,EAAD,KACEnL,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACEpL,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAY3O,KACpCoD,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAOC,KAAK,IAAIE,OAAK,EAACD,UAAYE,cAP5B3I,aCAE4I,QACW,cAA7BC,OAAOlD,SAASmD,UAEe,UAA7BD,OAAOlD,SAASmD,UAEhBD,OAAOlD,SAASmD,SAASC,MACvB,2DCVN,IAAMC,GACF9L,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,KACI/L,EAAAC,EAAAC,cAAC8L,GAAD,OAIRC,IAASC,OAAQJ,GAAKK,SAASC,eAAgB,SDmHzC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtD,KAAK,SAAAuD,GACjCA,EAAaC","file":"static/js/main.91b3978c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Weather\":\"Weather__Weather__2ACoX\",\"WeatherContainer\":\"Weather__WeatherContainer__2twaF\",\"HeaderContainer\":\"Weather__HeaderContainer__UFLQt\",\"spanItem\":\"Weather__spanItem__2tqCr\",\"HeaderCity\":\"Weather__HeaderCity__3S_0v\",\"WeatherInfo\":\"Weather__WeatherInfo__2VTx0\",\"WeatherIcon\":\"Weather__WeatherIcon__11S-r\",\"WeatherTempContainer\":\"Weather__WeatherTempContainer__2HaS0\",\"WeatherTemp\":\"Weather__WeatherTemp__1c4Lp\",\"WeatherTempToggle\":\"Weather__WeatherTempToggle__ZhEAT\",\"WeatherStats\":\"Weather__WeatherStats__2ugQB\",\"WeatherTile\":\"Weather__WeatherTile__2_K7_\",\"Closed\":\"Weather__Closed__1y-5o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"ErrorHandling__Error__bfrBJ\",\"Message\":\"ErrorHandling__Message__JG3Jw\",\"ErrorIcon\":\"ErrorHandling__ErrorIcon__2dVpF\",\"Details\":\"ErrorHandling__Details__3eGTA\",\"Summary\":\"ErrorHandling__Summary__1quql\",\"Button\":\"ErrorHandling__Button__gVTh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tile\":\"WeatherTile__Tile__2XfUr\",\"TileHeader\":\"WeatherTile__TileHeader__CWqaI\",\"TileTemp\":\"WeatherTile__TileTemp__12Ibw\",\"MaxTemp\":\"WeatherTile__MaxTemp__3y9uP\",\"MinTemp\":\"WeatherTile__MinTemp__1TgZj\",\"Closed\":\"WeatherTile__Closed__8z02V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__3wvlM\",\"Open\":\"SideDrawer__Open__3xsf8\",\"Closed\":\"SideDrawer__Closed__2za3W\",\"Logo\":\"SideDrawer__Logo__10IHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"TempToggler__Icon__lwtjT\",\"Active\":\"TempToggler__Active__2gAWZ\",\"InActive\":\"TempToggler__InActive__3pHjY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationSearchItem\":\"NavigationSearchItems__NavigationSearchItem__2etKh\",\"NavigationSearchForm\":\"NavigationSearchItems__NavigationSearchForm__r_AB7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__ajevi\",\"Onclic\":\"Button__Onclic__GwMb3\",\"rotating\":\"Button__rotating__21Nnm\",\"Closed\":\"Button__Closed__12f3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__3YSjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__3HY9i\",\"Closed\":\"NavigationItems__Closed__1hp7N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2hkfg\",\"Logo\":\"Toolbar__Logo__24rue\",\"DesktopOnly\":\"Toolbar__DesktopOnly__15Sc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"WeatherForm__Container__2iX5P\",\"Search\":\"WeatherForm__Search__PEnv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"DrawerToggle__Drawer__1bLtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop__BackDrop__1XO2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__3dgUo\",\"rotating\":\"Spinner__rotating__2w7lo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherForecast\":\"WeatherForecast__WeatherForecast__i8J3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__3Ge-C\",\"App-logo\":\"App__App-logo__S1Lue\",\"App-logo-spin\":\"App__App-logo-spin__2zbnz\",\"App-header\":\"App__App-header__1mzDF\",\"App-link\":\"App__App-link__2IVtc\"};","const Aux = props => props.children\r\n\r\nexport default Aux","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.css'\r\n\r\nconst NavigationItem = props => (\r\n    <li className={ classes.NavigationItem }>\r\n        <NavLink\r\n        onClick={ props.closed }\r\n        to={ props.link }\r\n        href={ props.link }\r\n        className={ props.active ? classes.active : null }>{ props.children }</NavLink>\r\n    </li>\r\n)\r\n\r\nexport default NavigationItem","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport classes from './NavigationSearchItems.css'\r\n\r\nclass NavSearchItem extends Component {\r\n    state = {\r\n        newCity: \"\"\r\n    }\r\n\r\n    inputCityHandler = event => {\r\n        this.setState({newCity: event.target.value})\r\n    }\r\n\r\n    submitHandler = async event => {\r\n        event.preventDefault();\r\n        const city = event.target.elements.city.value\r\n        const queryParams = encodeURIComponent(city)\r\n        this.props.history.push({\r\n            pathname: '/forecast',\r\n            search: `?city=${queryParams}`\r\n        })\r\n        this.setState({newCity: \"\"})\r\n        //Close the sidebar and backdrop when new search is submitted\r\n        this.props.closed() \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className={ classes.NavigationSearchItem }>\r\n                <form className={ classes.NavigationSearchForm } onSubmit={ this.submitHandler }>\r\n                    <input \r\n                    autoComplete=\"off\"\r\n                    name=\"city\"\r\n                    className={ this.props.active ? classes.active : null }\r\n                    type=\"text\" \r\n                    value={ this.state.newCity }\r\n                    placeholder=\"Search New City\"\r\n                    onChange={ this.inputCityHandler }/>\r\n                </form>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavSearchItem)","import React from 'react'\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\nimport NavigationSearchItem from './NavigationSearchItems/NavigationSearchItem'\r\nimport classes from './NavigationItems.css'\r\n\r\nconst navigationItems = props => {\r\n    let removeDisplay = null\r\n    if(props.remove) {\r\n        removeDisplay = classes.Closed\r\n    }\r\n    return (\r\n        <ul className={ classes.NavigationItems }>\r\n            <NavigationItem \r\n            link=\"/\"\r\n            closed={ props.closed }>Home</NavigationItem>\r\n            <NavigationSearchItem \r\n            className={ removeDisplay }\r\n            closed={ props.closed }/>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default navigationItems","import React from 'react'\r\n\r\nimport classes from './DrawerToggle.css'\r\n\r\nconst DrawerToggle = props => (\r\n    <div className={ classes.Drawer } onClick={ props.open }>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default DrawerToggle","import React from 'react'\r\n\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './Toolbar.css'\r\nimport DrawerToggle from '../../UI/DrawerToggle/DrawerToggle'\r\n\r\nconst toolbar = props => (\r\n    <header className={ classes.Toolbar }>\r\n        <DrawerToggle open={ props.showSideDrawer } />\r\n        <nav className={ classes.DesktopOnly }>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default toolbar\r\n","import React from 'react'\r\n\r\nimport classes from './BackDrop.css'\r\n\r\nconst BackDrop = props => (\r\n    props.show ? <div className={ classes.BackDrop } onClick={ props.clicked }></div> : null\r\n)\r\n\r\nexport default BackDrop","import React from 'react'\r\n\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.css'\r\nimport Aux from '../../../hoc/Auxillary/Auxillary'\r\nimport BackDrop from '../../UI/BackDrop/BackDrop'\r\n\r\nconst sideDrawer = props => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Closed]\r\n    if(props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n    return(\r\n        <Aux>\r\n            <BackDrop \r\n            show={ props.open }\r\n            clicked={ props.closed }/>\r\n            <div className={ attachedClasses.join(' ') }>\r\n                <nav>\r\n                    <NavigationItems \r\n                    closed={ props.closed }\r\n                    remove={ props.remove }/>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default sideDrawer","import React, { Component } from 'react'\r\n\r\nimport Aux from '../../hoc/Auxillary/Auxillary'\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer'\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    closeSideDrawerHandler = () => {\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    toggleSideDrawerHandler = () => {\r\n        this.setState(prevState => {\r\n            return {showSideDrawer: !prevState.showSideDrawer}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Aux>\r\n                <Toolbar showSideDrawer={ this.toggleSideDrawerHandler }/>\r\n                <SideDrawer \r\n                open={ this.state.showSideDrawer }\r\n                closed={ this.closeSideDrawerHandler }\r\n                remove={ this.toggleSideDrawerHandler }/>\r\n                <div> { this.props.children } </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\n\r\nimport classes from './WeatherForm.css'\r\n\r\nconst weatherForm = props => (\r\n    <form onSubmit={ props.load } className={ classes.Container }>\r\n        <input autoComplete=\"off\" type=\"text\" name=\"city\" placeholder=\"City\" required/>\r\n        <div className={ classes.Search }></div>\r\n    </form>\r\n)\r\n\r\n\r\nexport default weatherForm","import React from 'react'\r\n\r\nimport classes from './Spinner.css'\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n)\r\n\r\nexport default spinner","import React, { Component } from 'react'\r\n\r\nimport WeatherForm from '../../components/WeatherForm/WeatherForm'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass searchWeather extends Component {\r\n    state = {\r\n        loading: false,\r\n    }\r\n\r\n    getCity = async e => {\r\n        e.preventDefault();\r\n        this.setState({ loading: true })\r\n        const city = e.target.elements.city.value\r\n        this.setState({\r\n            loading: false\r\n        })\r\n        const queryParams = encodeURIComponent(city);\r\n        this.props.history.push({\r\n            pathname: \"/forecast\",\r\n            search: `?city=${queryParams}`\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"[SearchWeather] RENDER:\", this.props)\r\n        let weather = null\r\n\r\n        if(this.state.loading) {\r\n            weather = <Spinner />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <WeatherForm \r\n                load={ this.getCity } />\r\n                { weather }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default searchWeather","import React from 'react'\r\n\r\nimport classes from './WeatherTile.css'\r\n\r\nconst WeatherTile = props => {\r\n    return (\r\n        <div className={ classes.Tile }>\r\n            <span className={ classes.TileHeader }>{ props.day }</span>\r\n            <img src={ props.icon } alt=\"Forecasted Weather Icon\"/>\r\n            <div className={ classes.TileTemp }>\r\n                <span className={ classes.MaxTemp }>{ props.temp_max }&deg;</span>\r\n                <span className={ classes.MinTemp }>{ props.temp_min }&deg;</span>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n    \r\n\r\n\r\nexport default WeatherTile","import React from 'react'\r\n\r\nimport WeatherTile from '../../components/WeatherTile/WeatherTile'\r\nimport classes from './WeatherForecast.css'\r\n\r\nconst DATES = [\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tue\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\",\r\n    \"Sat\"\r\n]\r\n\r\nconst weatherForecast = props => {\r\n    console.log(\"[WeatherForecast]\", props.forecast )\r\n    let dd = new Date().getDay()\r\n    let weatherTiles = props.forecast.map((day, index) => {\r\n        index = (dd + index) % 7;\r\n        let date = DATES[index]\r\n        let temp_max, temp_min;\r\n        if(props.celsiusActive) {\r\n            temp_max = (day.main.temp_max - 273.15).toFixed(0)\r\n            temp_min = (day.main.temp_min - 273.15).toFixed(0)\r\n        }\r\n        if(props.farenheitActive) {\r\n            temp_max = ((day.main.temp_max - 273.15) * (9 / 5) + 32).toFixed(0);\r\n            temp_min = ((day.main.temp_min - 273.15) * (9 / 5) + 32).toFixed(0);\r\n        }\r\n        let imageURL = `http://openweathermap.org/img/w/${day.weather[0].icon}.png`\r\n        return (\r\n            <WeatherTile \r\n            day={ date }\r\n            key={ index }\r\n            temp_max={ temp_max }\r\n            temp_min={ temp_min }\r\n            icon={ imageURL }\r\n            conditions={ day.weather[0].description }/>\r\n        )\r\n    })\r\n    return (\r\n        <div className={ classes.WeatherForecast }>\r\n            { weatherTiles }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default weatherForecast","import React from 'react'\r\n\r\nimport classes from './Button.css'\r\n\r\nconst Button = props => {\r\n    let loadingClass = classes.Button\r\n    if(props.forecastLoading) {\r\n        loadingClass = classes.Onclic\r\n    }\r\n    if(props.forecast) {\r\n        loadingClass = classes.Closed\r\n    }\r\n    return (\r\n        <button\r\n        className={ loadingClass }\r\n        onClick={ props.load }>{ props.children }</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nimport classes from './TempToggler.css'\r\n\r\nconst tempToggler = props => {\r\n    let activeClasses = [classes.Icon, classes.InActive]\r\n    if(!props.active) {\r\n        activeClasses = [classes.Icon, classes.Active]\r\n    }\r\n    return (\r\n        <button onClick={ props.click } disabled={ props.active } className={ activeClasses.join(' ') }>\r\n            { props.children }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default tempToggler","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from './ErrorHandling.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst errorHandler = props => (\r\n    <div className={ classes.Error }>\r\n        <div className={ classes.Message }>\r\n            <FontAwesomeIcon className={classes.ErrorIcon} icon=\"frown\" />\r\n            <h2>{props.message}</h2>\r\n        </div>\r\n        <details className={ classes.Details }>\r\n            <summary className={ classes.Summary }>\r\n              Details\r\n            </summary>\r\n            {props.error && props.error.toString()}\r\n          <br />\r\n        </details>\r\n        <Link to=\"/\">\r\n            <button className={ classes.Button }>Retry</button>\r\n        </Link>\r\n    </div>\r\n)\r\n\r\nexport default errorHandler","import React, { Component } from 'react'\r\n\r\nimport classes from './Weather.css'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport WeatherForecast from '../WeatherForecast/WeatherForecast'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport TempToggler from '../../components/UI/TempToggler/TempToggler'\r\nimport ErrorHandling from '../../components/ErrorHandling/ErrorHandling'\r\n\r\nconst DATES = {\r\n    0: \"Sunday\",\r\n    1: \"Monday\",\r\n    2: \"Tuesday\",\r\n    3: \"Wednesday\",\r\n    4: \"Thursday\",\r\n    5: \"Friday\",\r\n    6: \"Saturday\"\r\n}\r\n\r\nclass weather extends Component {\r\n    state = {\r\n        city: null,\r\n        loading: false,\r\n        forecast: null,\r\n        showForecast: false,\r\n        forecastLoading: false,\r\n        country: null,\r\n        temperature: null,\r\n        icon: null,\r\n        description: null,\r\n        date: undefined,\r\n        humidity: undefined,\r\n        wind: undefined,\r\n        cloudiness: undefined,\r\n        celsiusActive: false,\r\n        farenheitActive: false,\r\n        error: false,\r\n        message: \"\"\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.setState({loading: true})\r\n        const city = this.props.location.search.substr(6)\r\n        this.getWeatherHandler(city);\r\n    }\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if(this.props.location.search !== prevProps.location.search) {\r\n            this.setState({loading: true})\r\n            const city = this.props.location.search.substr(6)\r\n            this.getWeatherHandler(city);\r\n        }\r\n    }\r\n\r\n    getWeatherHandler = city => {\r\n        const API_Key = \"4c04be157de57a31223958d6b571bd89\"\r\n        const updatedCity = city.charAt(0).toUpperCase() + city.slice(1);\r\n        this.setState({city: updatedCity})\r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${updatedCity}&APPID=${API_Key}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const temp = (data.main.temp - 273.15).toFixed(0);\r\n                const icon = `http://openweathermap.org/img/w/${data.weather[0].icon}.png`\r\n                const date = new Date()\r\n                const today = this.getDateHandler(date);\r\n                const windSpeed = (data.wind.speed * 360 / 1000).toFixed(0);\r\n                this.setState({\r\n                    country: data.sys.country,\r\n                    temperature: temp,\r\n                    icon: icon,\r\n                    description: data.weather[0].description,\r\n                    loading: false,\r\n                    date: today,\r\n                    humidity: data.main.humidity,\r\n                    wind: windSpeed,\r\n                    cloudiness: data.clouds.all,\r\n                    celsiusActive: true\r\n                })\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    loading: false,\r\n                    message: `Sorry, something went wrong searching for \"${updatedCity}\".`,\r\n                    error: error\r\n                })\r\n            })\r\n    }\r\n\r\n    getDateHandler = date => {\r\n        const dd = DATES[date.getDay()]\r\n        let hh = date.getHours()\r\n        let mm = date.getMinutes()\r\n        if(hh < 10) {\r\n            hh = `0${hh}`\r\n        }\r\n        if(mm < 10) {\r\n            mm = `0${mm}`\r\n        }\r\n        return `${dd}, ${hh}:${mm}`;\r\n    }\r\n\r\n    setCelsiusHandler = farenheit => {\r\n        const Celcius = ((farenheit - 32) * (5 / 9)).toFixed(0);\r\n        this.setState({\r\n            temperature: Celcius,\r\n            celsiusActive: true,\r\n            farenheitActive: false\r\n        })\r\n    }\r\n\r\n    setFarenheitHandler = celsius => {\r\n        const Farenheit = ((celsius * (9 / 5)) + 32).toFixed(0);\r\n        this.setState({\r\n            temperature: Farenheit,\r\n            celsiusActive: false,\r\n            farenheitActive: true\r\n        })\r\n    }\r\n\r\n    getForecast = () => {\r\n        this.setState({forecastLoading: true})\r\n        const city = this.state.city\r\n        const API_key = \"4c04be157de57a31223958d6b571bd89\"\r\n        fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=${API_key}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            const forecastDays = data.list.slice(0, 7);\r\n            this.setState({\r\n                showForecast: true,\r\n                forecast: forecastDays\r\n            })\r\n        })\r\n        .catch(error => \r\n            this.setState({\r\n                loading: false,\r\n                message: 'Something went wrong. Please try again.',\r\n                error: error\r\n            })\r\n        )\r\n    }\r\n    render() {\r\n        let weatherForecast = null\r\n\r\n        if(this.state.showForecast) {\r\n            weatherForecast = (\r\n                <WeatherForecast \r\n                forecast={ this.state.forecast }\r\n                celsiusActive={ this.state.celsiusActive }\r\n                farenheitActive={ this.state.farenheitActive }/>\r\n            )\r\n        }\r\n\r\n        let weather = (\r\n            <div className={ classes.Weather }>\r\n                <div className={ classes.HeaderContainer }> \r\n                    <span className={ classes.HeaderCity }>{ this.state.city }, { this.state.country }</span>\r\n                    <span className={ classes.spanItem }>{ this.state.date }</span>\r\n                    <span className={ classes.spanItem }>{ this.state.description }</span>\r\n                </div>\r\n                <div className={ classes.WeatherContainer }>\r\n                    <div className={ classes.WeatherInfo }>\r\n                        <img className={ classes.WeatherIcon } src={ this.state.icon } alt=\"The current weather\"/>\r\n                        <div className={ classes.WeatherTempContainer }>\r\n                            <span className={ classes.WeatherTemp }>{ this.state.temperature }</span>\r\n                            <div className={ classes.WeatherTempToggle }>\r\n                                <TempToggler active={ this.state.celsiusActive } click={ () => this.setCelsiusHandler(this.state.temperature)}>\r\n                                   &deg; C \r\n                                </TempToggler>\r\n                                <span> | </span> \r\n                                <TempToggler active={ this.state.farenheitActive } click={ () => this.setFarenheitHandler(this.state.temperature)}>\r\n                                    &deg; F \r\n                                </TempToggler>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={ classes.WeatherStats }>\r\n                        <div>Humidity: { this.state.humidity }%</div>\r\n                        <div>Cloudiness: { this.state.cloudiness }%</div>\r\n                        <div>Wind: { this.state.wind } km/h</div>\r\n                    </div>\r\n                </div>\r\n                <Button \r\n                load={ this.getForecast }\r\n                forecastLoading={ this.state.forecastLoading }\r\n                forecast={ this.state.forecast }>\r\n                    Get Forecast!\r\n                </Button>\r\n                { weatherForecast }\r\n            </div>\r\n        )\r\n        if(this.state.loading) {\r\n            weather = <Spinner />\r\n        }\r\n        if(this.state.error) {\r\n            weather = <ErrorHandling error={this.state.error} message={this.state.message}/>\r\n        }\r\n        return (\r\n            <div>\r\n                { weather }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default weather","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom'\n\nimport Layout from './components/Layout/Layout'\nimport SearchWeather from './containers/SearchWeather/SearchWeather'\nimport Weather from './containers/Weather/Weather'\nimport classes from './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFrown } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faFrown)\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={ classes.App }>\n        <Layout>\n          <Switch>\n            <Route path=\"/forecast\" component={ Weather }/>\n            <Route path=\"/\" exact component={ SearchWeather } />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}